language: cpp
os: linux

matrix:
  include:
  - name: GCC
    env:
    - C_compiler: gcc
    - CXX_compiler: g++
    - Coverage: true
  - name: GCC+lcov
    env:
    - C_compiler: gcc
    - CXX_compiler: g++
    - Coverage: lcov
    addons:
      apt:
        packages: lcov
  - name: clang+grcov
    env:
    - C_compiler: clang
    - CXX_compiler: clang++
    - Coverage: grcov
  - name: AppleClang
    os: osx
    osx_image: xcode10.1
    env:
    - Coverage: grcov
    addons:
      homebrew:
        packages:
        - coreutils # for sha512sum & nproc
        - bash      # update bash to at least v4.0

before_install:
- |
  # Setup
  mkdir -p ~/tools
  if [[ ${C_compiler:-} ]]; then   export CC=${C_compiler:?}; fi
  if [[ ${CXX_compiler:-} ]]; then export CXX=${CXX_compiler:?}; fi
  if [[ ${TRAVIS_OS_NAME} == "osx" ]]; then
    export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
  fi
- |
  # Install Mozilla/grcov
  if [[ ${Coverage:-} && ${Coverage} == "grcov" ]]; then
  ( set -Eeuxo pipefail
    GRCOV_TAG="v0.3.2"
    if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
      GRCOV_SHA512="8d29bd3aee6855a50d0b55b3e3ea14a51b989451aedebb8f2f15d309d4887e5aa005ed140148800fe198fadbeb844355e8df310d47f77edc453d8754f667c790"
    elif [[ ${TRAVIS_OS_NAME} == "osx" ]]; then
      GRCOV_SHA512="94a9bca1ca54e6d0b3eadc0aa88263852df8e29f5d3739142ff981a486ec90e25fb01f63443a90805856aec28b64d0e4327530cd4b50bb37ac4a8b05e9594481"
    fi
    echo "-- Installing grcov ${GRCOV_TAG}..."
    os=${TRAVIS_OS_NAME}
    file_name="grcov-${os}-x86_64.tar.bz2"
    GRCOV_URL="https://github.com/mozilla/grcov/releases/download/${GRCOV_TAG}/${file_name}"
    mkdir -p ~/tools/grcov
    echo "Download grcov..."
    wget "${GRCOV_URL}" --tries=3 --timeout 90 -nc
    sum=$(sha512sum ${file_name})
    sum=${sum:0:128}
    if [[ ${sum} == ${GRCOV_SHA512} ]]; then
      tar -xjf ${file_name}
      mv grcov ~/tools/grcov
      rm grcov-*
      echo "Finished installing grcov"
    else
      echo "grcov hash has changed!"    >&2
      echo "Expecting: ${GRCOV_SHA512}" >&2
      echo "Actual:    ${sum}"          >&2
      exit 1
    fi
  )
  export PATH=$PATH:$HOME/tools/grcov
  fi

before_script:
- mkdir -p build && cd build

script:
- cmake -DCODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug ..
- cmake --build . --config Debug
- ctest -j $(nproc) --output-on-failure

after_success:
- |
  # Code coverage
  cd ${TRAVIS_BUILD_DIR}
  if [[ ${Coverage:-} ]]; then
  ( set -Eeuxo pipefail
    if [[ ${Coverage} == "grcov" ]]; then
      coverage_report="coverage.json"
      flags="-t coveralls+ --token unused --commit-sha ${TRAVIS_COMMIT}"
      if [[ ${CXX_compiler:-} == clang* ]]; then flags="${flags} --llvm"; fi
      flags="${flags} --branch"
      grcov ./build ${flags} > ${coverage_report}
    elif [[ ${Coverage} == "lcov" ]]; then
      coverage_report="coverage.info"
      lcov --capture --directory ./build --output-file coverage.info
      lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter system-files
      lcov --list coverage.info
    fi
    bash_flags="-n ${TRAVIS_JOB_NAME}"
    if [[ ${coverage_report:-} && -f "${coverage_report}" ]]; then
      bash_flags="${bash_flags} -f ${coverage_report}"
    fi
    bash <(curl -s https://codecov.io/bash) ${bash_flags} ||
      echo "Codecov did not collect coverage reports"
  )
  fi

#notifications:
#  email:
#    - kosrok97@gmail.com
